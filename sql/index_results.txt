-----------------------------------------------

Q1:
No index: 1128.694ms

CREATE INDEX pub_category_index ON Publication(category); ---> 1334.891ms

Q3b:
No index: 729.541ms

CREATE INDEX pub_year_key_index ON Publication(year, key);
Time: 627.623ms

Q3c:
No index: 882.029ms

CREATE INDEX pub_year_confcybersa_index ON Publication(year, (key LIKE 'conf/cybersa%'));
Index on year and subtring: 320.623ms;

Q4a:
No index: 5016.007ms

CREATE INDEX pub_key_sigmod_index ON Publication((key LIKE '%sigmod%'));
CREATE INDEX pub_key_pvldb_index ON Publication((key LIKE '%pvldb%'));
Index on key substring: 117.804ms

Q4b Optimized:
No index: 2203.202ms

CREATE INDEX pub_key_pvldb_index ON Publication((key LIKE '%pvldb%'));
CREATE INDEX pub_key_kdd_index ON Publication((key LIKE '%kdd%'));
Index on key substring: 337.124ms

Q5 optimized:
No index: 1588.643ms

CREATE INDEX pub_year_index ON Publication (year);
Index on year: 2344.984ms

Q6:
Query plan seems to be similar for both original and optimized.
The optimized query seems to incur more cost due to the last index Scan on author_pkey

Original:
--------------------------------------------------------------------------------------------------------------------------------------------------
 Nested Loop  (cost=20275799.24..20275883.49 rows=10 width=24)
   ->  Limit  (cost=20275798.81..20275798.84 rows=10 width=12)
         ->  Sort  (cost=20275798.81..20276311.08 rows=204905 width=12)
               Sort Key: (count(DISTINCT pa2.author_id)) DESC
               ->  GroupAggregate  (cost=19532415.09..20271370.89 rows=204905 width=12)
                     Group Key: pa1.author_id
                     ->  Sort  (cost=19532415.09..19778050.68 rows=98254233 width=8)
                           Sort Key: pa1.author_id
                           ->  Merge Join  (cost=0.87..2459194.69 rows=98254233 width=8)
                                 Merge Cond: (pa1.publication_id = pa2.publication_id)
                                 Join Filter: (pa1.author_id <> pa2.author_id)
                                 ->  Index Only Scan using pub_author on publicationauthor pa1  (cost=0.44..357522.47 rows=9875894 width=8)
                                 ->  Materialize  (cost=0.44..382212.21 rows=9875894 width=8)
                                       ->  Index Only Scan using pub_author on publicationauthor pa2  (cost=0.44..357522.47 rows=9875894 width=8)
   ->  Index Scan using author_pkey on author q1  (cost=0.43..8.45 rows=1 width=20)
         Index Cond: (author_id = pa1.author_id)
(16 rows)

Optimized:
--------------------------------------------------------------------------------------------------------------------------------------------------
 Limit  (cost=20343509.51..20343509.54 rows=10 width=24)
   ->  Sort  (cost=20343509.51..20344021.78 rows=204905 width=24)
         Sort Key: (count(DISTINCT pa2.author_id)) DESC
         ->  Merge Join  (cost=19532415.52..20339081.59 rows=204905 width=24)
               Merge Cond: (pa1.author_id = author.author_id)
               ->  GroupAggregate  (cost=19532415.09..20271370.89 rows=204905 width=12)
                     Group Key: pa1.author_id
                     ->  Sort  (cost=19532415.09..19778050.68 rows=98254233 width=8)
                           Sort Key: pa1.author_id
                           ->  Merge Join  (cost=0.87..2459194.69 rows=98254233 width=8)
                                 Merge Cond: (pa1.publication_id = pa2.publication_id)
                                 Join Filter: (pa1.author_id <> pa2.author_id)
                                 ->  Index Only Scan using pub_author on publicationauthor pa1  (cost=0.44..357522.47 rows=9875894 width=8)
                                 ->  Materialize  (cost=0.44..382212.21 rows=9875894 width=8)
                                       ->  Index Only Scan using pub_author on publicationauthor pa2  (cost=0.44..357522.47 rows=9875894 width=8)
               ->  Index Scan using author_pkey on author  (cost=0.43..58576.21 rows=1809652 width=20)
(16 rows)

Q7:
No index: 103318.001ms

CREATE INDEX pub_key_jour_conf_index ON Publication((key LIKE 'journals/%' OR key LIKE 'journals/%')); ----> 95567.617ms

CREATE INDEX pub_key_jour_index ON Publication((key LIKE 'journals/%'));

CREATE INDEX pub_key_conf_index ON Publication((key LIKE 'conf/%'));

CREATE INDEX pub_year_index ON Publication (year); ----> 106085.355ms

CREATE INDEX pub_title_data_index ON Publication((LOWER(title) LIKE '%data%')); ----> 105954.770ms

CREATE INDEX pub_jour_conf_data_index ON Publication((((key LIKE 'journals/%') OR (key LIKE 'conf/%')) AND (LOWER(title) LIKE '%data%')));

CREATE INDEX pub_year_jour_conf_data_index ON Publication(year, (((key LIKE 'journals/%') OR (key LIKE 'conf/%')) AND (LOWER(title) LIKE '%data%')));

Q7 optimized:
No index: 69603.509ms

CREATE INDEX pub_title_data_index ON Publication((LOWER(title) LIKE '%data%')); ----> 54321.343ms

CREATE INDEX pub_year_index ON Publication (year); ----> 55094.102ms